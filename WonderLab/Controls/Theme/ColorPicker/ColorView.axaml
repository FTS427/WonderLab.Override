<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="using:Avalonia.Controls"
                    xmlns:converters="using:Avalonia.Controls.Converters"
                    xmlns:primitives="using:Avalonia.Controls.Primitives"
                    xmlns:pc="clr-namespace:Avalonia.Controls.Primitives.Converters;assembly=Avalonia.Controls.ColorPicker"
                    xmlns:globalization="clr-namespace:System.Globalization;assembly=mscorlib"
                    xmlns:wc="using:WonderLab.Controls">
	<pc:ContrastBrushConverter x:Key="ContrastBrushConverter" />
	<converters:ColorToDisplayNameConverter x:Key="ColorToDisplayNameConverter" />
	<converters:DoNothingForNullConverter x:Key="DoNothingForNullConverter" />
	<globalization:NumberFormatInfo x:Key="ColorViewComponentNumberFormat" NumberDecimalDigits="0" />
	<x:Double x:Key="ColorViewTabStripHeight">48</x:Double>
	<x:Double x:Key="ColorViewComponentLabelWidth">30</x:Double>
	<x:Double x:Key="ColorViewComponentTextInputWidth">80</x:Double>
	<CornerRadius x:Key="ColorViewTabBackgroundCornerRadius">4</CornerRadius>

	<Design.PreviewWith>
		<ColorPicker/>
	</Design.PreviewWith>

	<ControlTheme x:Key="ColorViewPaletteListBoxTheme" TargetType="ListBox">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.IsScrollChainingEnabled" Value="True" />
		<Setter Property="Template">
			<ControlTemplate>
				<Border Name="border"
						ClipToBounds="{TemplateBinding ClipToBounds}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}">
					<ScrollViewer Name="PART_ScrollViewer"
								  HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
								  VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}"
								  IsScrollChainingEnabled="{TemplateBinding (ScrollViewer.IsScrollChainingEnabled)}"
								  IsDeferredScrollingEnabled="{TemplateBinding (ScrollViewer.IsDeferredScrollingEnabled)}"
								  AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}">
						<ItemsPresenter Name="PART_ItemsPresenter"
										Margin="{TemplateBinding Padding}"
										ItemsPanel="{TemplateBinding ItemsPanel}"/>
					</ScrollViewer>
				</Border>
			</ControlTemplate>
		</Setter>
	</ControlTheme>

	<ControlTheme x:Key="ColorViewPaletteListBoxItemTheme" TargetType="ListBoxItem">
		<Setter Property="Padding" Value="0" />
		<Setter Property="CornerRadius" Value="4"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		
		<Setter Property="Template">
			<ControlTemplate TargetType="{x:Type ListBoxItem}">
				<Grid Margin="0 0 2 2" UseLayoutRounding="False">
					<ContentPresenter Name="PART_ContentPresenter"
									  Background="{TemplateBinding Background}"
									  BorderBrush="{TemplateBinding BorderBrush}"
									  BorderThickness="{TemplateBinding BorderThickness}"
									  CornerRadius="{TemplateBinding CornerRadius}"
									  ContentTemplate="{TemplateBinding ContentTemplate}"
									  Content="{TemplateBinding Content}"
									  Padding="{TemplateBinding Padding}"
									  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
									  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
					
					<Border x:Name="BorderRectangle"
							CornerRadius="4"
							BorderThickness="1.5"
							IsHitTestVisible="False"
							VerticalAlignment="Stretch"
							HorizontalAlignment="Stretch"/>
				</Grid>
			</ControlTemplate>
		</Setter>

		<Style Selector="^ /template/ Border#BorderRectangle">
			<Setter Property="BorderBrush" Value="{DynamicResource SystemControlHighlightListAccentLowBrush}" />
			<Setter Property="Opacity" Value="0" />
		</Style>

		<Style Selector="^:pointerover /template/ Border#BorderRectangle" x:DataType="Color">
			<Setter Property="BorderBrush" Value="{Binding Converter={StaticResource ContrastBrushConverter}}" />
			<Setter Property="Opacity" Value="0.5" />
		</Style>

		<Style Selector="^:selected /template/ Border#BorderRectangle" x:DataType="Color">
			<Setter Property="BorderBrush" Value="{Binding Converter={StaticResource ContrastBrushConverter}}" />
			<Setter Property="Opacity" Value="1" />
		</Style>
	</ControlTheme>

	<!-- Based on the Fluent ToggleButton ControlTheme -->
	<ControlTheme x:Key="ColorViewColorModelRadioButtonTheme"
				  TargetType="RadioButton">
		<Setter Property="Background" Value="{DynamicResource ToggleButtonBackground}" />
		<Setter Property="Foreground" Value="{DynamicResource ToggleButtonForeground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrush}" />
		<Setter Property="BorderThickness" Value="{DynamicResource ToggleButtonBorderThemeThickness}" />
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
		<Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<ControlTemplate>
				<ContentPresenter x:Name="PART_ContentPresenter"
								  Background="{TemplateBinding Background}"
								  BorderBrush="{TemplateBinding BorderBrush}"
								  BorderThickness="{TemplateBinding BorderThickness}"
								  CornerRadius="{TemplateBinding CornerRadius}"
								  Content="{TemplateBinding Content}"
								  ContentTemplate="{TemplateBinding ContentTemplate}"
								  Padding="{TemplateBinding Padding}"
								  RecognizesAccessKey="True"
								  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
			</ControlTemplate>
		</Setter>

		<Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundPointerOver}" />
			<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushPointerOver}" />
			<Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundPointerOver}" />
		</Style>

		<Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundPressed}" />
			<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushPressed}" />
			<Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundPressed}" />
		</Style>

		<Style Selector="^:checked">
			<Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundChecked}" />
				<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushChecked}" />
				<Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundChecked}" />
			</Style>

			<Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedPointerOver}" />
				<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushCheckedPointerOver}" />
				<Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedPointerOver}" />
			</Style>

			<Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
				<Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedPressed}" />
				<Setter Property="BorderBrush" Value="{DynamicResource ToggleButtonBorderBrushCheckedPressed}" />
				<Setter Property="Foreground" Value="{DynamicResource ToggleButtonForegroundCheckedPressed}" />
			</Style>
		</Style>
	</ControlTheme>

	<!-- Based on the Fluent TabItem ControlTheme -->
	<ControlTheme x:Key="ColorViewTabItemTheme"
				  TargetType="TabItem">
		<Setter Property="Margin" Value="0" />
		<Setter Property="Height" Value="34" />
		<Setter Property="CornerRadius" Value="8" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FontSize" Value="{DynamicResource TabItemHeaderFontSize}" />
		<Setter Property="FontWeight" Value="{DynamicResource TabItemHeaderThemeFontWeight}" />
		<Setter Property="Foreground" Value="{DynamicResource TextFillColorTertiaryBrush}" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<ControlTemplate>
				<Panel>
					<Border Name="PART_LayoutRoot"
							CornerRadius="8"
							Height="32"
							Background="Transparent"
							VerticalAlignment="Bottom"
							HorizontalAlignment="Stretch"
							RenderTransform="scaleX(0.95) scaleY(0.88)">
						<Border.Transitions>
							<Transitions>
								<TransformOperationsTransition Easing="0,0 0,1"
															   Duration="00:00:0.35"
															   Property="RenderTransform"/>
							</Transitions>
						</Border.Transitions>
					</Border>

					<ContentPresenter Name="PART_ContentPresenter"
									  Content="{TemplateBinding Header}"
									  FontSize="{TemplateBinding FontSize}"
									  FontFamily="{TemplateBinding FontFamily}"
									  FontWeight="{TemplateBinding FontWeight}"
									  ContentTemplate="{TemplateBinding HeaderTemplate}"
									  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

					<Border Width="0"
							Height="3"
							MaxWidth="18"
							Margin="0 0 0 0"
							CornerRadius="114514"
							Name="PART_SelectedPipe"
							VerticalAlignment="Bottom"
							HorizontalAlignment="Center"
							Background="{DynamicResource NormalAccentBrush}">
						<Border.Transitions>
							<Transitions>
								<DoubleTransition Property="Width"
												  Easing="0,0 0,1"
												  Duration="0:0:0.167"/>
							</Transitions>
						</Border.Transitions>
					</Border>
				</Panel>
			</ControlTemplate>
		</Setter>

		<Style Selector="^:selected">
			<Setter Property="TextElement.Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />

			<Style Selector="^ /template/ Border#PART_LayoutRoot">
				<Setter Property="RenderTransform" Value="scaleX(1) scaleY(1)"/>
				<Setter Property="Background" Value="{DynamicResource DividerBrush}"/>
			</Style>

			<Style Selector="^ /template/ Border#PART_SelectedPipe">
				<Setter Property="Width" Value="18" />
			</Style>

			<Style Selector="^:pressed /template/ Border#PART_SelectedPipe">
				<Setter Property="Width" Value="10" />
			</Style>
		</Style>

		<Style Selector="^:pointerover /template/ Border#PART_LayoutRoot">
			<Setter Property="Background" Value="{DynamicResource DividerBrush}" />
			<Setter Property="TextElement.Foreground" Value="{DynamicResource TextFillColorSecondaryBrush}" />
		</Style>

		<Style Selector="^:pressed /template/ Border#PART_LayoutRoot">
			<Setter Property="RenderTransform" Value="scaleX(0.92) scaleY(0.85)"/>
			<Setter Property="TextElement.Foreground" Value="{DynamicResource TextFillColorPrimaryBrush}" />
		</Style>

	</ControlTheme>

	<ControlTheme x:Key="{x:Type ColorView}" TargetType="ColorView">
		<Setter Property="CornerRadius" Value="12"/>
		<Setter Property="HexInputAlphaPosition" Value="Trailing"/>
		
		<Setter Property="Palette">
			<controls:FluentColorPalette />
		</Setter>

		<Setter Property="Template">
			<ControlTemplate TargetType="{x:Type ColorView}">
				<Grid RowDefinitions="Auto,Auto">

					<!-- Backgrounds -->
					<Border x:Name="TabBackgroundBorder"
							Height="36"
							Grid.Row="0"
							Grid.RowSpan="2"
							CornerRadius="12"
							BorderThickness="2"
							VerticalAlignment="Top"
							HorizontalAlignment="Stretch"
							Background="{DynamicResource ContentBrush2}"
							BorderBrush="{DynamicResource ContentBrush3}"/>

					<Border x:Name="ContentBackgroundBorder"
							Grid.Row="0"
							Grid.RowSpan="2"
							Margin="0,48,0,0"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							CornerRadius="{TemplateBinding CornerRadius, Converter={StaticResource BottomCornerRadiusFilterConverter}}"
							Background="{DynamicResource ColorViewContentBackgroundBrush}"
							BorderBrush="{DynamicResource ColorViewContentBorderBrush}"
							BorderThickness="0,1,0,0" />

					<TabControl x:Name="PART_TabControl"
								Grid.Row="0"
								Height="338"
								Width="350"
								Padding="0"
								SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
						<TabControl.ItemsPanel>
							<ItemsPanelTemplate>
								<UniformGrid Columns="0"
											 Rows="1" />
							</ItemsPanelTemplate>
						</TabControl.ItemsPanel>
						<!-- Spectrum Tab -->
						<TabItem Theme="{StaticResource ColorViewTabItemTheme}"
								 IsVisible="{TemplateBinding IsColorSpectrumVisible}">
							<TabItem.Header>
								<wc:FontIcon FontSize="18"
											 Glyph="&#xE76D;"
											 Foreground="{DynamicResource LayoutForeground}"/>
							</TabItem.Header>
							
							<Grid Margin="12 12"
								  RowDefinitions="*">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								
								<primitives:ColorSlider x:Name="ColorSpectrumThirdComponentSlider"
														AutomationProperties.Name="Third Component"
														Grid.Column="0"
														IsAlphaVisible="False"
														IsPerceptive="True"
														Orientation="Vertical"
														ColorModel="Hsva"
														ColorComponent="{Binding ThirdComponent, ElementName=ColorSpectrum}"
														HsvColor="{Binding HsvColor, ElementName=ColorSpectrum}"
														HorizontalAlignment="Center"
														VerticalAlignment="Stretch"
														Margin="0 0 4 0"
														IsVisible="{TemplateBinding IsColorSpectrumSliderVisible}"/>
								
								<primitives:ColorSpectrum x:Name="ColorSpectrum"
														  Grid.Column="1" CornerRadius="8"
														  Components="{TemplateBinding ColorSpectrumComponents}"
														  HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
														  MinHue="{TemplateBinding MinHue}"
														  MaxHue="{TemplateBinding MaxHue}"
														  MinSaturation="{TemplateBinding MinSaturation}"
														  MaxSaturation="{TemplateBinding MaxSaturation}"
														  MinValue="{TemplateBinding MinValue}"
														  MaxValue="{TemplateBinding MaxValue}"
														  Shape="{TemplateBinding ColorSpectrumShape}"
														  HorizontalAlignment="Stretch"
														  VerticalAlignment="Stretch" />
								
								<primitives:ColorSlider x:Name="ColorSpectrumAlphaSlider"
														AutomationProperties.Name="Alpha Component"
														Grid.Column="2"
														Orientation="Vertical"
														ColorModel="Hsva"
														ColorComponent="Alpha"
														HsvColor="{Binding HsvColor, ElementName=ColorSpectrum}"
														HorizontalAlignment="Center"
														VerticalAlignment="Stretch"
														Margin="12,0,0,0"
														IsEnabled="{TemplateBinding IsAlphaEnabled}">
									<primitives:ColorSlider.IsVisible>
										<MultiBinding Converter="{x:Static BoolConverters.And}">
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
													 Path="IsAlphaVisible" />
										</MultiBinding>
									</primitives:ColorSlider.IsVisible>
								</primitives:ColorSlider>
							</Grid>
						</TabItem>

						<!-- Palette Tab -->
						<TabItem Theme="{StaticResource ColorViewTabItemTheme}"
								 IsVisible="{TemplateBinding IsColorPaletteVisible}">
							<TabItem.Header>
								<wc:FontIcon FontSize="18"
											 Glyph="&#xE790;"
											 Foreground="{DynamicResource LayoutForeground}"/>
							</TabItem.Header>

							<ListBox Theme="{StaticResource ColorViewPaletteListBoxTheme}"
									 ItemContainerTheme="{StaticResource ColorViewPaletteListBoxItemTheme}"
									 ItemsSource="{TemplateBinding PaletteColors}"
									 SelectedItem="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DoNothingForNullConverter}, Mode=TwoWay}"
									 UseLayoutRounding="False"
									 Margin="12">
								<ListBox.ItemTemplate>
									<DataTemplate DataType="{x:Type Color}">
										<Border CornerRadius="4"
												VerticalAlignment="Stretch"
												HorizontalAlignment="Stretch"
												ToolTip.Tip="{Binding Converter={StaticResource ColorToDisplayNameConverter}}"
												AutomationProperties.Name="{Binding Converter={StaticResource ColorToDisplayNameConverter}}">
											<Border.Background>
												<SolidColorBrush Color="{Binding}" />
											</Border.Background>
										</Border>
									</DataTemplate>
								</ListBox.ItemTemplate>
								<ListBox.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Columns="{Binding $parent[ColorView].PaletteColumnCount}" />
									</ItemsPanelTemplate>
								</ListBox.ItemsPanel>
							</ListBox>
						</TabItem>
						
						<!-- Components Tab -->
						<TabItem Theme="{StaticResource ColorViewTabItemTheme}"
								 IsVisible="{TemplateBinding IsColorComponentsVisible}">
							<TabItem.Header>
								<wc:FontIcon FontSize="18"
											 Glyph="&#xE9E9;"
											 Foreground="{DynamicResource LayoutForeground}"/>
							</TabItem.Header>
							<Grid ColumnDefinitions="Auto,Auto,*"
								  RowDefinitions="Auto,24,1*,1*,1*,1*,12"
								  Margin="12">
								<!-- Top color model & Hex input -->
								<Grid Grid.Column="0"
									  Grid.ColumnSpan="3"
									  Grid.Row="0"
									  ColumnDefinitions="1*,12,1*">
									<!-- Content RGB/HSV names are hard-coded and considered universal -->
									<!-- RadioButtons are styled to look like a 'SegmentedControl' or 'ButtonGroup' -->
									<Grid ColumnDefinitions="1*,1*"
										  IsVisible="{TemplateBinding IsColorModelVisible}">
										<RadioButton x:Name="RgbRadioButton"
													 Theme="{StaticResource ColorViewColorModelRadioButtonTheme}"
													 Grid.Column="0"
													 Content="RGB"
													 CornerRadius="4,0,0,4"
													 BorderThickness="1,1,0,1"
													 Height="{Binding ElementName=PART_HexTextBox, Path=Bounds.Height}"
													 IsChecked="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Rgba}, Mode=TwoWay}" />
										<RadioButton x:Name="HsvRadioButton"
													 Theme="{StaticResource ColorViewColorModelRadioButtonTheme}"
													 Grid.Column="1"
													 Content="HSV"
													 CornerRadius="0,4,4,0"
													 BorderThickness="0,1,1,1"
													 Height="{Binding ElementName=PART_HexTextBox, Path=Bounds.Height}"
													 IsChecked="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Hsva}, Mode=TwoWay}" />
									</Grid>
									<Grid x:Name="HexInputGrid"
										  Grid.Column="2"
										  IsVisible="{TemplateBinding IsHexInputVisible}">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="30" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										<Border Grid.Column="0"
												Height="32"
												Background="{DynamicResource TextControlBackgroundDisabled}"
												BorderBrush="{DynamicResource TextControlBorderBrush}"
												BorderThickness="1,1,0,1"
												CornerRadius="4,0,0,4">
											<TextBlock Foreground="{DynamicResource TextControlForegroundDisabled}"
													   FontWeight="SemiBold"
													   Text="#"
													   HorizontalAlignment="Center"
													   VerticalAlignment="Center" />
										</Border>
										<!-- Color updated in code-behind -->
										<!-- Max length must include an optional '#' prefix (#FFFFFFFF) -->
										<TextBox x:Name="PART_HexTextBox"
												 Grid.Column="1"
												 AutomationProperties.Name="Hexadecimal Color"
												 Height="32"
												 MaxLength="9"
												 HorizontalAlignment="Stretch"
												 CornerRadius="0,4,4,0" />
									</Grid>
								</Grid>
								<!-- Color component editing controls -->
								<!-- Component 1 RGB:Red HSV:Hue -->
								<Border Grid.Column="0"
										Grid.Row="2"
										Height="{Binding ElementName=Component1NumericUpDown, Path=Bounds.Height}"
										Width="{DynamicResource ColorViewComponentLabelWidth}"
										Background="{DynamicResource TextControlBackgroundDisabled}"
										BorderBrush="{DynamicResource TextControlBorderBrush}"
										BorderThickness="1,1,0,1"
										CornerRadius="4,0,0,4"
										VerticalAlignment="Center"
										IsVisible="{TemplateBinding IsComponentTextInputVisible}">
									<Panel HorizontalAlignment="Center"
										   VerticalAlignment="Center">
										<TextBlock Foreground="{DynamicResource TextControlForegroundDisabled}"
												   FontWeight="SemiBold"
												   Text="R"
												   IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Rgba}, Mode=OneWay}"/>
										<TextBlock Foreground="{DynamicResource TextControlForegroundDisabled}"
												   FontWeight="SemiBold"
												   Text="H"
												   IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Hsva}, Mode=OneWay}" />
									</Panel>
								</Border>
								<NumericUpDown x:Name="Component1NumericUpDown"
											   Grid.Column="1"
											   Grid.Row="2"
											   AllowSpin="True"
											   ShowButtonSpinner="False"
											   Height="32"
											   Width="{DynamicResource ColorViewComponentTextInputWidth}"
											   CornerRadius="0,4,4,0"
											   Margin="0,0,12,0"
											   VerticalAlignment="Center"
											   NumberFormat="{StaticResource ColorViewComponentNumberFormat}"
											   Minimum="{Binding Minimum, ElementName=Component1Slider}"
											   Maximum="{Binding Maximum, ElementName=Component1Slider}"
											   Value="{Binding Value, ElementName=Component1Slider}"
											   IsVisible="{TemplateBinding IsComponentTextInputVisible}" />
								<primitives:ColorSlider x:Name="Component1Slider"
														Grid.Column="2"
														Grid.Row="2"
														Orientation="Horizontal"
														IsRoundingEnabled="True"
														IsSnapToTickEnabled="True"
														TickFrequency="1"
														ColorComponent="Component1"
														ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
														HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
														HorizontalAlignment="Stretch"
														VerticalAlignment="Center"
														IsVisible="{TemplateBinding IsComponentSliderVisible}" />
								<!-- Component 2 RGB:Green HSV:Saturation -->
								<Border Grid.Column="0"
										Grid.Row="3"
										Width="{DynamicResource ColorViewComponentLabelWidth}"
										Height="{Binding ElementName=Component2NumericUpDown, Path=Bounds.Height}"
										Background="{DynamicResource TextControlBackgroundDisabled}"
										BorderBrush="{DynamicResource TextControlBorderBrush}"
										BorderThickness="1,1,0,1"
										CornerRadius="4,0,0,4"
										VerticalAlignment="Center"
										IsVisible="{TemplateBinding IsComponentTextInputVisible}">
									<Panel HorizontalAlignment="Center"
										   VerticalAlignment="Center">
										<TextBlock Foreground="{DynamicResource TextControlForegroundDisabled}"
												   FontWeight="SemiBold"
												   Text="G"
												   IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Rgba}, Mode=OneWay}" />
										<TextBlock Foreground="{DynamicResource TextControlForegroundDisabled}"
												   FontWeight="SemiBold"
												   Text="S"
												   IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Hsva}, Mode=OneWay}" />
									</Panel>
								</Border>
								<NumericUpDown x:Name="Component2NumericUpDown"
											   Grid.Column="1"
											   Grid.Row="3"
											   AllowSpin="True"
											   ShowButtonSpinner="False"
											   Height="32"
											   Width="{DynamicResource ColorViewComponentTextInputWidth}"
											   CornerRadius="0,4,4,0"
											   Margin="0,0,12,0"
											   VerticalAlignment="Center"
											   NumberFormat="{StaticResource ColorViewComponentNumberFormat}"
											   Minimum="{Binding Minimum, ElementName=Component2Slider}"
											   Maximum="{Binding Maximum, ElementName=Component2Slider}"
											   Value="{Binding Value, ElementName=Component2Slider}"
											   IsVisible="{TemplateBinding IsComponentTextInputVisible}" />
								<primitives:ColorSlider x:Name="Component2Slider"
														Grid.Column="2"
														Grid.Row="3"
														Orientation="Horizontal"
														IsRoundingEnabled="True"
														IsSnapToTickEnabled="True"
														TickFrequency="1"
														ColorComponent="Component2"
														ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
														HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
														HorizontalAlignment="Stretch"
														VerticalAlignment="Center"
														IsVisible="{TemplateBinding IsComponentSliderVisible}" />
								<!-- Component 3 RGB:Blue HSV:Value -->
								<Border Grid.Column="0"
										Grid.Row="4"
										Width="{DynamicResource ColorViewComponentLabelWidth}"
										Height="{Binding ElementName=Component3NumericUpDown, Path=Bounds.Height}"
										Background="{DynamicResource TextControlBackgroundDisabled}"
										BorderBrush="{DynamicResource TextControlBorderBrush}"
										BorderThickness="1,1,0,1"
										CornerRadius="4,0,0,4"
										VerticalAlignment="Center"
										IsVisible="{TemplateBinding IsComponentTextInputVisible}">
									<Panel HorizontalAlignment="Center"
										   VerticalAlignment="Center">
										<TextBlock Foreground="{DynamicResource TextControlForegroundDisabled}"
												   FontWeight="SemiBold"
												   Text="B"
												   IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Rgba}, Mode=OneWay}" />
										<TextBlock Foreground="{DynamicResource TextControlForegroundDisabled}"
												   FontWeight="SemiBold"
												   Text="V"
												   IsVisible="{TemplateBinding ColorModel, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static controls:ColorModel.Hsva}, Mode=OneWay}" />
									</Panel>
								</Border>
								<NumericUpDown x:Name="Component3NumericUpDown"
											   Grid.Column="1"
											   Grid.Row="4"
											   AllowSpin="True"
											   ShowButtonSpinner="False"
											   Height="32"
											   Width="{DynamicResource ColorViewComponentTextInputWidth}"
											   CornerRadius="0,4,4,0"
											   Margin="0,0,12,0"
											   VerticalAlignment="Center"
											   NumberFormat="{StaticResource ColorViewComponentNumberFormat}"
											   Minimum="{Binding Minimum, ElementName=Component3Slider}"
											   Maximum="{Binding Maximum, ElementName=Component3Slider}"
											   Value="{Binding Value, ElementName=Component3Slider}"
											   IsVisible="{TemplateBinding IsComponentTextInputVisible}" />
								<primitives:ColorSlider x:Name="Component3Slider"
														Grid.Column="2"
														Grid.Row="4"
														Orientation="Horizontal"
														IsRoundingEnabled="True"
														IsSnapToTickEnabled="True"
														TickFrequency="1"
														ColorComponent="Component3"
														ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
														HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
														HorizontalAlignment="Stretch"
														VerticalAlignment="Center"
														IsVisible="{TemplateBinding IsComponentSliderVisible}" />
								<!-- Alpha Component -->
								<Border Grid.Column="0"
										Grid.Row="5"
										Width="{DynamicResource ColorViewComponentLabelWidth}"
										Height="{Binding ElementName=AlphaComponentNumericUpDown, Path=Bounds.Height}"
										Background="{DynamicResource TextControlBackgroundDisabled}"
										BorderBrush="{DynamicResource TextControlBorderBrush}"
										BorderThickness="1,1,0,1"
										CornerRadius="4,0,0,4"
										VerticalAlignment="Center"
										IsEnabled="{TemplateBinding IsAlphaEnabled}">
									<TextBlock x:Name="AlphaComponentTextBlock"
											   Foreground="{DynamicResource TextControlForegroundDisabled}"
											   FontWeight="SemiBold"
											   Text="A"
											   HorizontalAlignment="Center"
											   VerticalAlignment="Center" />
									<Border.IsVisible>
										<MultiBinding Converter="{x:Static BoolConverters.And}">
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
													 Path="IsAlphaVisible" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
													 Path="IsComponentTextInputVisible" />
										</MultiBinding>
									</Border.IsVisible>
								</Border>
								<NumericUpDown x:Name="AlphaComponentNumericUpDown"
											   Grid.Column="1"
											   Grid.Row="5"
											   AllowSpin="True"
											   ShowButtonSpinner="False"
											   Height="32"
											   Width="{DynamicResource ColorViewComponentTextInputWidth}"
											   CornerRadius="0,4,4,0"
											   Margin="0,0,12,0"
											   VerticalAlignment="Center"
											   NumberFormat="{StaticResource ColorViewComponentNumberFormat}"
											   Minimum="{Binding Minimum, ElementName=AlphaComponentSlider}"
											   Maximum="{Binding Maximum, ElementName=AlphaComponentSlider}"
											   Value="{Binding Value, ElementName=AlphaComponentSlider}"
											   IsEnabled="{TemplateBinding IsAlphaEnabled}">
									<NumericUpDown.IsVisible>
										<MultiBinding Converter="{x:Static BoolConverters.And}">
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
													 Path="IsAlphaVisible" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
													 Path="IsComponentTextInputVisible" />
										</MultiBinding>
									</NumericUpDown.IsVisible>
								</NumericUpDown>
								<primitives:ColorSlider x:Name="AlphaComponentSlider"
														Grid.Column="2"
														Grid.Row="5"
														Orientation="Horizontal"
														IsRoundingEnabled="True"
														IsSnapToTickEnabled="True"
														TickFrequency="1"
														ColorComponent="Alpha"
														ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
														HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
														HorizontalAlignment="Stretch"
														VerticalAlignment="Center"
														IsEnabled="{TemplateBinding IsAlphaEnabled}">
									<primitives:ColorSlider.IsVisible>
										<MultiBinding Converter="{x:Static BoolConverters.And}">
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
													 Path="IsAlphaVisible" />
											<Binding RelativeSource="{RelativeSource TemplatedParent}"
													 Path="IsComponentSliderVisible" />
										</MultiBinding>
									</primitives:ColorSlider.IsVisible>
								</primitives:ColorSlider>
							</Grid>
						</TabItem>
					</TabControl>

					<primitives:ColorPreviewer Grid.Row="1"
											   Margin="12 0 12 12"
											   IsVisible="{TemplateBinding IsColorPreviewVisible}"
											   IsAccentColorsVisible="{TemplateBinding IsAccentColorsVisible}"
											   HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
				</Grid>
			</ControlTemplate>
		</Setter>
	</ControlTheme>
</ResourceDictionary>